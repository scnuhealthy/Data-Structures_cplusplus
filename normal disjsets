#include <iostream>
#include<vector>
using namespace std;
class DisjSets
{
public:
    explicit DisjSets(int numElements)
    {
        s.reserve(numElements);
        for(int i=0;i<numElements;i++)
            s.push_back(-1);
    }
    int find(int x)const;
    int find(int x);
    void unionSets(int root1,int root2);
    void print(){for(int i=0;i<s.size();i++) cout<<s[i];cout<<endl;}
private:
    vector<int> s;
};
int DisjSets::find(int x)const
{
    if(s[x]<0)
        return x;
    else find(s[x]);

}
void DisjSets::unionSets(int root1,int root2)
{
    if(s[root2]<s[root1])
        s[root1]=root2;
    else
    {
        if(s[root1]==s[root2])
            s[root1]--;
        s[root2]=root1;
    }
}
int DisjSets::find(int x)
{
    if(s[x]<0)
        return x;
    else
        return s[x]=find(s[x]);
}
int main()
{
    DisjSets D(10);
    D.unionSets(2,4);
    cout<<D.find(2)<<endl;
    cout<<D.find(4)<<endl;
    D.unionSets(1,2);
    cout<<D.find(1)<<endl;
    D.unionSets(3,5);
    D.unionSets(D.find(4),D.find(3));
    D.print();
    cout<<D.find(5)<<endl;//s[5]改为2
    D.print();
    return 0;
}
